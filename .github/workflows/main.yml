name: Deploy

on: workflow_dispatch

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: [7.2]
        node-version: [14.x]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Yarn
        run: npm install -g yarn

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Node dependencies
        run: yarn install --frozen-lockfile

      - name: Build frontend
        run: yarn prod

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Use PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@b7d1d9c9a92d8d8463ce36d7f60da34d461724f8
        with:
          php-version: ${{ matrix.php-version }}

      - name: Install PHP Dependencies
        run: |
          composer install \
            --no-dev \
            --profile \
            --ignore-platform-reqs \
            --optimize-autoloader \
            --no-scripts \
            --no-interaction \
            --prefer-dist

      - name: Step up environment
        env:
          APP_ENV: production
          APP_DEBUG: false
          APP_NAME: 禾場國際芳療學苑
          APP_URL: http://official.aromaharvest.com.tw
          DIST_TARGET_DIR: official.aromaharvest.com.tw
        run: |
          cp .env.example .env \
          && sed -i '/^DB_USERNAME/s/=.*$/=${{ secrets.DB_USERNAME }}/' .env \
          && sed -i '/^DB_PASSWORD/s/=.*$/=${{ secrets.DB_PASSWORD }}/' .env \
          && sed -i '/^DB_DATABASE/s/=.*$/=${{ secrets.DB_DATABASE }}/' .env \
          && sed -i '/^MAIL_FROM_ADDRESS/s/=.*$/=${{ secrets.MAIL_USERNAME }}/' .env \
          && sed -i '/^MAIL_USERNAME/s/=.*$/=${{ secrets.MAIL_USERNAME }}/' .env \
          && sed -i '/^MAIL_PASSWORD/s/=.*$/=${{ secrets.MAIL_PASSWORD }}/' .env \
          && sed -i '/^APP_NAME/s/=.*$/=${{ env.APP_NAME }}/' .env \
          && sed -i '/^APP_URL/s@=.*$@=${{ env.APP_URL }}@' .env \
          && sed -i '/^APP_ENV/s/=.*$/=${{ env.APP_ENV }}/' .env \
          && sed -i '/^APP_DEBUG/s/=.*$/=${{ env.APP_DEBUG }}/' .env \
          && php artisan key:generate \
          && php artisan config:cache \
          && php artisan route:cache \
          && php artisan view:cache

      - name: Deploy FTP
        uses: kevinpainchaud/simple-ftp-deploy-action@v1.2.1
        with:
          ftp_host: ${{ secrets.FTP_HOST }}
          ftp_username: ${{ secrets.FTP_USERNAME }}
          ftp_password: ${{ secrets.FTP_PASSWORD }}
          local_source_dir: "."
          dist_target_dir: ${{ env.DIST_TARGET_DIR }}
          ignore_time: true
          delete: true
          exclude: |
            "
            '.github/'
            '.git/'
            'tests/'
            'node_modules/'
            'storage/app/'
            'resources/sass/'
            'resources/lang/'
            'resources/js/'
            'resources/image/'
            'resources/css/'
            '.php_cs'
            '.editorconfig'
            'package-lock.json'
            '.env.example'
            '.styleci.yml'
            '.eslintrc.js'
            '_ide_helper.php'
            'phpunit.xml'
            "
          other_flags: |
            "--scan-all-first \
            --parallel=$(nproc) \
            --ascii \
            --exclude-glob *.vue \
            --exclude-glob *.md \
            --exclude-glob .git* \
            --file .env"
